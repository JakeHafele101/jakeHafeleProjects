Goals

The goal of this project was to make the most faithful recreation of an old style tetris game. I 
specifically wanted to class inheritance to reinforce what I learned in my java coding class at school. 
To do this, I planned on making a general class for the blocks and a specific one for each block. I wanted
the controls to be done through keyboard input by the player. I also wanted a start, pause, and game over
screen to make the game more accessible for the user. To be more faithful towards tetris, a score, level, 
and lines cleared tabs will be needed on the sides of the main grid. finally, I wished to make the resolution
a moderate to small size so the game could be more accessible. This project will be done in Processing,
which is a Java tool that helps to make drawing shapes and objects much easier. Currently, this is my go 
to application for making simple games.


Process

To keep track of everything in this project, I made a google slides list to document the differnet stages
of my project. To see more of this directly, you can scroll down to my YouTube video below. What I talk 
about here will be an overview of that but more condensed. The first thing I did was draw out on my computer
how I wished for the game to look to the user. To achieve this, I made my first class, the Menu class. This
class would handle showing most of the games elements, except for the cells. It would display and keep track
of the strings and integers for the lines cleared, score, and level values. I ended up settling on a dark
gray theme for the general User Interface, since this would help make the actual tetris blocks stand out 
more. 

To make a usable grid for the actual tetris blocks, I ended up making a Cell and Grid class. The cell class
would keep track of the variables of each block on the grid. The Grid class would then take an x and y 
parameter in its constructor to make a 2d array of Cells. This helped model my layout of cells, sine I could
access this 2d array object inside of the grid class and use certain x and y indexes to manipulate the cells.
The cells were not constructed anywhere but inside of the grid class. After the grid class was cosntructed
inside of the main program in setup(), it would loop to be shown to the UI inside of draw(). To specify,
the setup() function is always ran once, while the draw() function loops infinitely unless directly stopped.
This is helpful, since you can initiate objects once inside of setup() then show them and modify them in 
draw() for however long you need. 




Reflection

asdasd